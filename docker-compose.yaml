volumes:
  prometheus_data: {}
  grafana_storage: {}

services:
  sqlserver:
    image: mcr.microsoft.com/mssql/server:2019-latest
    container_name: sqlserver
    environment:
      SA_PASSWORD: ${SENHA_SQL_SERVER}
      ACCEPT_EULA: "Y"
      MSSQL_PID: "Developer"
    ports:
      - "1433:1433"

  mssqltools:
    image: mcr.microsoft.com/mssql-tools
    container_name: mssqltools
    depends_on:
      - sqlserver
    volumes:
      - ./banco-dados/criar-banco-dados.sql:/tmp/criar-banco-dados.sql
      - ./banco-dados/inserir-cidades.sql:/tmp/inserir-cidades.sql
      - ./banco-dados/inicializar-banco.sh:/tmp/inicializar-banco.sh
    command: /bin/bash ./tmp/inicializar-banco.sh    

  otel-collector:
    image: otel/opentelemetry-collector-contrib
    container_name: otel-collector
    environment:
      - TZ=America/Sao_Paulo
    volumes:
      - ./otel-collector/config.yaml:/etc/otelcol-contrib/config.yaml
    command: 
      - '--config'
      - '/etc/otelcol-contrib/config.yaml'
    ports:
      - 4317:4317
      - 8889:8889
    depends_on:
      - jaeger
      - prometheus

  node-exporter:
    image: prom/node-exporter:latest
    container_name: node-exporter
    restart: unless-stopped
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    expose:
      - 9100    

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    restart: unless-stopped
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    ports:
      - "9090:9090"

  grafana:
    image: grafana/grafana
    container_name: grafana
    restart: unless-stopped
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    ports:
      - '3000:3000'
    volumes:
      - 'grafana_storage:/var/lib/grafana'

  jaeger:
    image: jaegertracing/all-in-one:latest
    container_name: jaeger
    ports:
      - 16686:16686
      - 14268
      - 14250

  cidadesapi:
    container_name: cidadesapi
    build:
      context: ./CidadesApi
      dockerfile: ./CidadesApi/Dockerfile
    depends_on:
      mssqltools:
        condition: service_completed_successfully      
    ports:
      - "8080:8080"      
    environment:
      - ConnectionStrings__BancoCidades=${CONNECTION_STRING_BANCO_CIDADES}
      - OTLP_ENDPOINT_URL=${OTLP_ENDPOINT_URL}
    